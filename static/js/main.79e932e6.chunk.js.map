{"version":3,"sources":["parts/SearchResultItem.tsx","parts/seach-history.ts","parts/SearchInput.tsx","parts/SearchList.tsx","parts/search-store.ts","pages/Search.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["RepositoryItem","item","this","props","key","id","style","padding","borderTop","fontSize","href","url","target","nameWithOwner","marginBottom","dangerouslySetInnerHTML","__html","shortDescriptionHTML","display","flexWrap","repositoryTopics","nodes","map","node","borderRadius","cursor","color","onClick","window","open","fontWeight","topic","name","alignItems","marginTop","marginRight","StarOutlined","marginLeft","stargazers","totalCount","primaryLanguage","width","height","backgroundColor","licenseInfo","hidden","spdxId","updatedAt","Date","toLocaleString","React","IssueItem","body","content","length","substring","title","SearchHistoryStore","storageKey","location","hostname","save","localStorage","setItem","JSON","stringify","history","getFromLocal","observable","action","val","idx","findIndex","d","splice","unshift","console","log","historyString","getItem","parse","SearchInput","observer","historyStore","input","onChange","_","store","close","blur","setQ","add","documentClickHandler","document","addEventListener","removeEventListener","position","ref","r","placeholder","e","value","defaultValue","q","onFocus","show","nativeEvent","stopImmediatePropagation","onPressEnter","currentTarget","showHistory","zIndex","top","left","right","maxHeight","boxShadow","v","justifyContent","setValue","flexDirection","clean","SearchList","renderList","dataSource","data","search","filter","itemLayout","size","renderItem","footer","text","disabled","pageInfo","hasNextPage","hasPreviousPage","type","setPageInfo","scrollTo","renderCountTip","tip","repositoryCount","issueCount","renderTypeRadio","Group","buttonStyle","setType","Button","maxWidth","margin","SearchOutlined","SearchStore","first","last","after","before","endCursor","undefined","startCursor","loadFromSearch","Math","min","computed","obj","parseQuery","setBrowserUrl","loading","variables","toJS","query","Axios","headers","Authorization","method","then","status","catch","err","error","queryObj","currentObj","pathname","pushState","startsWith","Header","Layout","Content","Search","flexShrink","flex","spinning","App","Boolean","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.79e932e6.chunk.js","sourcesContent":["import * as React from 'react';\nimport { SearchResult } from './search-store';\nimport { Tag } from 'antd';\nimport { StarOutlined } from '@ant-design/icons';\n\ninterface Props {\n    item: SearchResult;\n}\n\nexport class RepositoryItem extends React.Component<Props> {\n    render() {\n        const { item } = this.props;\n\n        return (\n            <div key={item.id} style={{ padding: '24px 0', borderTop: '1px solid #e1e4e8' }}>\n                <a style={{ fontSize: '16px' }} href={item.url} target='__blank'>{item.nameWithOwner}</a>\n                <div style={{ marginBottom: '4px' }} dangerouslySetInnerHTML={{ __html: item.shortDescriptionHTML }} />\n                <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n                    {item.repositoryTopics?.nodes.map(node => {\n                        return (\n                            <Tag\n                                key={node.url}\n                                style={{ borderRadius: 6, marginBottom: 4, cursor: 'pointer' }}\n                                color='blue'\n                                onClick={() => {\n                                    window.open(node.url)\n                                }}\n                            >\n                                <div style={{ fontSize: 12, fontWeight: 500 }}>{node.topic.name}</div>\n                            </Tag>\n                        );\n                    })}\n                </div>\n                <div style={{ display: 'flex', flexWrap: 'wrap', alignItems: 'center', fontSize: 12, marginTop: 4 }}>\n                    <div style={{ display: 'flex', alignItems: 'center', marginRight: 16 }}>\n                        <StarOutlined />\n                        <div style={{ marginLeft: 4 }}>\n                            {item.stargazers?.totalCount}\n                        </div>\n                    </div>\n                    {\n                        item.primaryLanguage &&\n                        <div style={{ display: 'flex', alignItems: 'center', marginRight: 16 }}>\n                            <div style={{ width: 12, height: 12, borderRadius: 6, backgroundColor: item.primaryLanguage.color, marginRight: 4 }} />\n                            <div>\n                                {item.primaryLanguage.name}\n                            </div>\n                        </div>\n                    }\n                    {\n                        item.licenseInfo && !item.licenseInfo.hidden &&\n                        <div style={{ display: 'flex', alignItems: 'center', marginRight: 16 }}>\n                            <div style={{ marginLeft: 4 }}>\n                                {`${item.licenseInfo.spdxId} license`}\n                            </div>\n                        </div>\n                    }\n                    {\n                        item.updatedAt &&\n                        <div>\n                            {`Updated on ${new Date(item.updatedAt).toLocaleString()}`}\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport class IssueItem extends React.Component<Props> {\n    render() {\n        const { item } = this.props;\n        const body = item.body || ''\n        const content = body.length > 120 ? body.substring(0, 120) + ' ...' : body;\n\n        return (\n            <div key={item.id} style={{ padding: '24px 0', borderTop: '1px solid #e1e4e8' }}>\n                <a style={{ fontSize: '16px' }} href={item.url} target='__blank'>{item.title}</a>\n                <div style={{ marginBottom: '4px' }}>{content}</div>\n            </div>\n        );\n    }\n}","import { observable, action } from \"mobx\";\n\nexport class SearchHistoryStore {\n    storageKey = window.location.hostname;\n\n    @observable history: string[] = [];\n\n    constructor() {\n        this.getFromLocal();\n    }\n\n    @action add = (val: string) => {\n        if (!val) {\n            return;\n        }\n        const idx = this.history.findIndex(d => d === val);\n        if (idx > -1) {\n            this.history.splice(idx, 1);\n        }\n        this.history.unshift(val);\n        this.save();\n    }\n\n    @action delete = (val: string) => {\n        const idx = this.history.findIndex(d => d === val);\n        if (idx === -1) {\n            return;\n        }\n        this.history.splice(idx, 1);\n        this.save();\n    }\n\n    @action clean = () => {\n        console.log('clean');\n        this.history = [];\n        this.save();\n    }\n\n    save = () => {\n        localStorage.setItem(this.storageKey, JSON.stringify(this.history));\n    }\n\n    @action getFromLocal = () => {\n        const historyString = localStorage.getItem(this.storageKey) || '[]';\n        this.history = JSON.parse(historyString);\n    }\n}","import * as React from 'react';\nimport { Input } from 'antd';\nimport * as _ from 'lodash';\nimport { SearchStore } from './search-store';\nimport { observer } from 'mobx-react';\nimport { observable, action } from 'mobx';\nimport { SearchHistoryStore } from './seach-history';\n\ninterface Props {\n    style?: React.CSSProperties;\n    store: SearchStore;\n}\n\n@observer\nexport class SearchInput extends React.Component<Props> {\n\n    historyStore = new SearchHistoryStore();\n    input: Input | null = null;\n\n    @observable showHistory = false;\n\n    componentDidMount() {\n        window.document.addEventListener('click', this.documentClickHandler)\n    }\n\n    componentWillUnmount() {\n        window.document.removeEventListener('click', this.documentClickHandler)\n    }\n\n    render() {\n        const { style, store } = this.props;\n        return (\n            <div style={{ position: 'relative' }}>\n                <Input\n                    ref={r => this.input = r}\n                    placeholder='Search...'\n                    style={{ borderRadius: 6, ...style }}\n                    onChange={e => this.onChange(e.target.value)}\n                    defaultValue={store.q}\n                    onFocus={this.show}\n                    onClick={e => e.nativeEvent.stopImmediatePropagation()}\n                    onPressEnter={e => this.onChange(e.currentTarget.value)}\n                />\n                {\n                    this.showHistory && this.historyStore.history.length > 0 &&\n                    <div\n                        style={{ zIndex: 99, position: 'absolute', top: 36, left: 0, right: 0, maxHeight: 200, backgroundColor: '#fff', boxShadow: 'rgb(51, 51, 51, 0.1) 0px 10px 12px' }}\n                        onClick={e => e.nativeEvent.stopImmediatePropagation()}\n                    >\n                        {this.historyStore.history.map(v => {\n                            return (\n                                <div\n                                    key={v}\n                                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', padding: '4px 12px', fontSize: '16px', color: '#666', cursor: 'pointer' }}\n                                    onClick={() => {\n                                        this.close();\n                                        this.input?.setValue(v);\n                                        store.setQ(v);\n                                    }}\n                                >\n                                    {v}\n                                </div>\n                            )\n                        })}\n                        <div style={{ display: 'flex', flexDirection: 'row-reverse', padding: '4px 12px' }}>\n                            <div style={{ color: '#666', cursor: 'pointer' }} onClick={e => {\n                                this.historyStore.clean();\n                                this.close();\n                            }}>清除记录</div>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n\n    onChange = _.debounce((val: string) => {\n        const { store } = this.props;\n        this.close();\n        this.input?.blur();\n        store.setQ(val);\n        this.historyStore.add(val);\n    }, 800);\n\n    @action show = () => {\n        this.showHistory = true;\n    }\n\n    @action close = () => {\n        this.showHistory = false;\n    }\n\n    documentClickHandler = () => {\n        this.close();\n    }\n}","import * as React from 'react';\nimport { List, Radio, Button } from 'antd';\nimport { SearchStore, SearchResult } from './search-store';\nimport { observer } from 'mobx-react';\nimport { RepositoryItem, IssueItem } from './SearchResultItem';\nimport { SearchInput } from './SearchInput';\nimport { SearchOutlined } from '@ant-design/icons';\n\ninterface Props {\n    store: SearchStore;\n}\n\n@observer\nexport class SearchList extends React.Component<Props> {\n    render() {\n        return (\n            <div style={{ maxWidth: '768px', margin: 'auto', padding: '0 20px' }}>\n                <div style={{ marginBottom: 24 }}>\n                    <h2 style={{ color: '#24292E' }}><SearchOutlined style={{ marginRight: 6 }} />Search Github</h2>\n                    <SearchInput\n                        style={{ width: '100%' }}\n                        store={this.props.store}\n                    />\n                </div>\n                {this.renderTypeRadio()}\n                {this.renderCountTip()}\n                {this.renderList()}\n            </div>\n        );\n    }\n\n    renderList = () => {\n        const { store } = this.props;\n        const dataSource = (store.data?.data.search.nodes || []).filter(item => item.id);\n        if (!store.data) {\n            return null;\n        }\n        return (\n            <List<SearchResult>\n                style={{ height: '100%' }}\n                itemLayout=\"vertical\"\n                size=\"large\"\n                dataSource={dataSource}\n                renderItem={this.renderItem}\n                footer={<div style={{ display: 'flex', flexDirection: 'row-reverse', alignItems: 'center' }}>\n                    {[\n                        { text: 'Next', action: 'next', disabled: store.pageInfo?.hasNextPage },\n                        { text: 'Previous', action: 'previous', disabled: store.pageInfo?.hasPreviousPage },\n                    ].filter(item => item.disabled).map(item => (\n                        <Button\n                            key={item.action}\n                            style={{ padding: '0 10px', fontSize: '16px' }}\n                            type='link'\n                            onClick={() => {\n                                store.setPageInfo(item.action);\n                                window.scrollTo(0, 0);\n                            }}\n                        >\n                            {item.text}\n                        </Button>\n                    ))}\n                </div>}\n            />\n        );\n    }\n\n    renderItem = (item: SearchResult) => {\n        const { store } = this.props;\n\n        if (store.type === 'REPOSITORY') {\n            return <RepositoryItem item={item} />;\n        }\n\n        if (store.type === 'ISSUE') {\n            return <IssueItem item={item} />;\n        }\n\n        return null;\n    }\n\n    renderCountTip = () => {\n        const { store } = this.props;\n        const tip = (() => {\n            switch (store.type) {\n                case 'REPOSITORY':\n                    return `Showing ${store.data?.data.search.repositoryCount.toLocaleString()} available repository results`;\n                case 'ISSUE':\n                    return `${store.data?.data.search.issueCount.toLocaleString()} issues`;\n                default:\n                    return '';\n            }\n        })()\n\n        return (\n            store.data && tip &&\n            <div style={{ fontSize: 24, color: '#24292E', fontWeight: 'bold', marginBottom: 16 }}>{tip}</div>\n        );\n    }\n\n    renderTypeRadio = () => {\n        const { store } = this.props;\n        return (\n            <div style={{ marginBottom: 24 }}>\n                <Radio.Group\n                    size='small'\n                    buttonStyle='solid'\n                    defaultValue={store.type}\n                    onChange={e => {\n                        store.setType(e.target.value);\n                    }}\n                >\n                    <Radio.Button value=\"REPOSITORY\">Repositories</Radio.Button>\n                    <Radio.Button value=\"ISSUE\">Issues</Radio.Button>\n                </Radio.Group>\n            </div>\n        );\n    }\n}","import { observable, computed, action, toJS } from \"mobx\";\nimport Axios from \"axios\";\nimport { stringify } from 'query-string';\nimport { parse } from \"querystring\";\n\nconst endpoint = 'https://api.github.com/graphql';\nconst accessToken = '3b96073eba661302b428a303d373b1884d37399d';\n\nconst searchQuery = `\nquery githubsearch($query: String!, $first: Int, $last: Int, $type: SearchType!, $after: String, $before: String) {\n    search(query: $query, type: $type, first: $first, last: $last, after: $after, before: $before) {\n        issueCount\n        repositoryCount\n        nodes {\n            ... on Repository {\n                id\n                name\n                nameWithOwner\n                updatedAt\n                shortDescriptionHTML(limit: 120)\n                primaryLanguage {\n                    color\n                    name\n                }\n                licenseInfo {\n                    hidden\n                    spdxId\n                }\n                repositoryTopics(first: 10) {\n                    nodes {\n                        topic {\n                            name\n                        }\n                        url\n                    }\n                }\n                stargazers {\n                    totalCount\n                }\n                url\n            }\n            ... on Issue {\n                id\n                title\n                state\n                body\n                url\n            }\n        }\n        pageInfo {\n            hasNextPage\n            startCursor\n            hasPreviousPage\n            endCursor\n        }\n    }\n}\n`;\n\nexport interface SearchResult {\n    id: string;\n    name: string;\n    nameWithOwner: string;\n    updatedAt: string;\n    shortDescriptionHTML: string;\n    primaryLanguage: {\n        color: string;\n        name: string;\n    };\n    licenseInfo: {\n        hidden: boolean;\n        spdxId: string;\n    };\n    repositoryTopics?: {\n        nodes: [{\n            topic: {\n                name: string\n            };\n            url: string;\n        }];\n    };\n    stargazers?: {\n        totalCount: number;\n    };\n    url: string;\n\n    title: string;\n    state: string;\n    body: string;\n}\n\ninterface PageInfo {\n    hasNextPage: boolean\n    hasPreviousPage: boolean;\n    startCursor: string;\n    endCursor: string;\n}\n\nexport class SearchStore {\n    @observable data?: {\n        data: {\n            search: {\n                nodes: SearchResult[];\n                repositoryCount: number;\n                issueCount: number;\n                pageInfo: PageInfo;\n            }\n        }\n    };\n\n\n    @observable total = 0;\n    @observable loading = false;\n\n    @observable q: string = '';\n    @observable type: string = 'REPOSITORY';\n\n    first?: number = 10;\n    last?: number;\n    after?: string;\n    before?: string;\n\n    @computed get pageInfo() {\n        return this.data?.data.search.pageInfo;\n    }\n    @computed get pageTotal() {\n        if (this.type === 'REPOSITORY') {\n            return Math.min(1000, this.data?.data.search.repositoryCount || 0);\n        }\n        if (this.type === 'ISSUE') {\n            return Math.min(1000, this.data?.data.search.issueCount || 0);\n        }\n        return 0;\n    }\n\n    constructor(search: string) {\n        this.loadFromSearch(search);\n    }\n\n    @action loadFromSearch = (search: string) => {\n        const obj = parseQuery(search);\n        if (obj['q']) {\n            this.q = obj['q'] as string;\n        }\n        if (obj['type']) {\n            this.type = obj['type'] as string;\n        }\n        this.search();\n    }\n\n    @action setQ = (q: string) => {\n        this.q = q;\n        this.after = undefined;\n        this.before = undefined;\n        setBrowserUrl({ q });\n        this.search();\n    }\n    @action setType = (type: string) => {\n        this.type = type;\n        this.data = undefined;\n        setBrowserUrl({ type });\n        this.search();\n    }\n    setPageInfo = (type: string) => {\n        if (type === 'next') {\n            this.after = this.pageInfo?.endCursor;\n            this.before = undefined;\n            this.first = 10;\n            this.last = undefined;\n        }\n        if (type === 'previous') {\n            this.before = this.pageInfo?.startCursor;\n            this.after = undefined;\n            this.last = 10;\n            this.first = undefined;\n        }\n        this.search();\n    }\n\n    @action search = () => {\n        this.loading = true;\n        const variables = toJS({\n            query: this.q,\n            first: this.first,\n            last: this.last,\n            type: this.type,\n            after: this.after,\n            before: this.before,\n        });\n\n        Axios({\n            url: endpoint,\n            headers: {\n                Authorization: `Bearer ${accessToken}`\n            },\n            method: 'POST',\n            data: ({\n                query: searchQuery,\n                variables,\n            })\n        })\n            .then(action(r => {\n                if (r.status === 200) {\n                    this.data = r.data;\n                }\n                this.loading = false;\n            }))\n            .catch(action(err => {\n                console.error(err);\n                this.loading = false;\n            }))\n    }\n\n}\n\nfunction setBrowserUrl(queryObj: { [key: string]: any }) {\n    let search = window.location.search;\n    const currentObj = parseQuery(search);\n    var url = `${window.location.pathname}?${stringify({ ...currentObj, ...queryObj })}`\n    window.history.pushState({ url }, '', url)\n}\n\nfunction parseQuery(search: string): { [key: string]: any } {\n    if (search.startsWith('?')) {\n        search = search.substring(1);\n    }\n    return parse(search);\n}","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { Layout, Spin } from 'antd';\nimport { SearchList } from '../parts/SearchList';\nimport { SearchStore } from '../parts/search-store';\n\nconst { Header, Content } = Layout;\n\n@observer\nexport class Search extends React.Component {\n\n    store = new SearchStore(document.location.search);\n\n    render() {\n        return <Layout style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>\n            <Header style={{ display: 'flex', alignItems: 'center', height: '53px', backgroundColor: '#24292e', color: '#fff', padding: '0 20px' }}>\n                <div style={{ flexShrink: 0, fontSize: '16px', fontWeight: 'bold', marginRight: '16px' }}>Github Explorer</div>\n            </Header>\n            <Content style={{ flex: 1, justifyContent: 'center', backgroundColor: '#fff', padding: '24px 0 50px' }}>\n                <Spin spinning={this.store.loading}>\n                    <SearchList store={this.store} />\n                </Spin>\n            </Content>\n        </Layout>\n    }\n}\n","import * as React from 'react';\nimport { Search } from './pages/Search';\n\nclass App extends React.Component {\n    render() {\n        return <Search />;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'antd/dist/antd.css';\nimport './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}