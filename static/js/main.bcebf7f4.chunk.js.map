{"version":3,"sources":["parts/search-store.ts","parts/SearchResultItem.tsx","parts/seach-history.ts","parts/SearchInput.tsx","parts/SearchList.tsx","parts/TokenInput.tsx","parts/config.ts","pages/Search.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SearchStore","vars","first","last","after","before","accessToken","setPageInfo","type","pageInfo","endCursor","undefined","startCursor","search","this","loadFromSearch","data","Math","min","repositoryCount","issueCount","observable","computed","action","obj","parseQuery","q","setBrowserUrl","loading","variables","toJS","query","Axios","url","headers","Authorization","method","then","r","status","catch","err","console","error","queryObj","currentObj","window","location","pathname","stringify","history","pushState","startsWith","substring","parse","RepositoryItem","item","props","key","id","style","padding","borderTop","fontSize","href","target","nameWithOwner","marginBottom","dangerouslySetInnerHTML","__html","shortDescriptionHTML","display","flexWrap","repositoryTopics","nodes","map","node","borderRadius","cursor","color","onClick","open","fontWeight","topic","name","alignItems","marginTop","marginRight","StarOutlined","marginLeft","stargazers","totalCount","primaryLanguage","width","height","backgroundColor","licenseInfo","hidden","spdxId","updatedAt","Date","toLocaleString","React","IssueItem","body","content","length","title","SearchHistoryStore","storageKey","hostname","save","localStorage","setItem","JSON","getFromLocal","val","idx","findIndex","d","splice","unshift","log","historyString","getItem","SearchInput","observer","historyStore","input","onChange","_","store","close","blur","setQ","add","documentClickHandler","document","addEventListener","removeEventListener","position","ref","placeholder","e","value","defaultValue","onFocus","show","nativeEvent","stopImmediatePropagation","onPressEnter","currentTarget","showHistory","zIndex","top","left","right","maxHeight","boxShadow","v","justifyContent","setValue","flexDirection","clean","SearchList","renderList","dataSource","filter","itemLayout","size","renderItem","footer","text","disabled","hasNextPage","hasPreviousPage","scrollTo","renderCountTip","tip","renderTypeRadio","Group","buttonStyle","setType","Button","spinning","maxWidth","margin","SearchOutlined","TokenInput","config","setGithubAccessToken","GithubConfig","token","getGithubAccessToken","removeItem","Header","Layout","Content","Search","renderContent","flexShrink","deleteToken","flex","App","Boolean","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bcebf7f4.chunk.js","sourcesContent":["import { observable, computed, action, toJS } from \"mobx\";\nimport Axios from \"axios\";\nimport { stringify } from 'query-string';\nimport { parse } from \"querystring\";\n\nconst endpoint = 'https://api.github.com/graphql';\n\nconst searchQuery = `\nquery githubsearch($query: String!, $first: Int, $last: Int, $type: SearchType!, $after: String, $before: String) {\n    search(query: $query, type: $type, first: $first, last: $last, after: $after, before: $before) {\n        issueCount\n        repositoryCount\n        nodes {\n            ... on Repository {\n                id\n                name\n                nameWithOwner\n                updatedAt\n                shortDescriptionHTML(limit: 120)\n                primaryLanguage {\n                    color\n                    name\n                }\n                licenseInfo {\n                    hidden\n                    spdxId\n                }\n                repositoryTopics(first: 10) {\n                    nodes {\n                        topic {\n                            name\n                        }\n                        url\n                    }\n                }\n                stargazers {\n                    totalCount\n                }\n                url\n            }\n            ... on Issue {\n                id\n                title\n                state\n                body\n                url\n            }\n        }\n        pageInfo {\n            hasNextPage\n            startCursor\n            hasPreviousPage\n            endCursor\n        }\n    }\n}\n`;\n\nexport interface SearchResult {\n    id: string;\n    name: string;\n    nameWithOwner: string;\n    updatedAt: string;\n    shortDescriptionHTML: string;\n    primaryLanguage: {\n        color: string;\n        name: string;\n    };\n    licenseInfo: {\n        hidden: boolean;\n        spdxId: string;\n    };\n    repositoryTopics?: {\n        nodes: [{\n            topic: {\n                name: string\n            };\n            url: string;\n        }];\n    };\n    stargazers?: {\n        totalCount: number;\n    };\n    url: string;\n\n    title: string;\n    state: string;\n    body: string;\n}\n\ninterface PageInfo {\n    hasNextPage: boolean\n    hasPreviousPage: boolean;\n    startCursor: string;\n    endCursor: string;\n}\n\nexport class SearchStore {\n    @observable data?: {\n        data: {\n            search: {\n                nodes: SearchResult[];\n                repositoryCount: number;\n                issueCount: number;\n                pageInfo: PageInfo;\n            }\n        }\n    };\n\n\n    @observable total = 0;\n    @observable loading = false;\n\n    @observable q: string = '';\n    @observable type: string = 'REPOSITORY';\n\n    first?: number = 10;\n    last?: number;\n    after?: string;\n    before?: string;\n\n    accessToken?: string;\n\n    @computed get pageInfo() {\n        return this.data?.data.search.pageInfo;\n    }\n    @computed get pageTotal() {\n        if (this.type === 'REPOSITORY') {\n            return Math.min(1000, this.data?.data.search.repositoryCount || 0);\n        }\n        if (this.type === 'ISSUE') {\n            return Math.min(1000, this.data?.data.search.issueCount || 0);\n        }\n        return 0;\n    }\n\n    constructor(vars: { accessToken: string, search: string }) {\n        const { accessToken, search } = vars;\n        this.accessToken = accessToken;\n        this.loadFromSearch(search);\n    }\n\n    @action loadFromSearch = (search: string) => {\n        const obj = parseQuery(search);\n        if (obj['q']) {\n            this.q = obj['q'] as string;\n        }\n        if (obj['type']) {\n            this.type = obj['type'] as string;\n        }\n        this.search();\n    }\n\n    @action setQ = (q: string) => {\n        this.q = q;\n        this.after = undefined;\n        this.before = undefined;\n        setBrowserUrl({ q });\n        this.search();\n    }\n    @action setType = (type: string) => {\n        this.type = type;\n        this.data = undefined;\n        setBrowserUrl({ type });\n        this.search();\n    }\n    setPageInfo = (type: string) => {\n        if (type === 'next') {\n            this.after = this.pageInfo?.endCursor;\n            this.before = undefined;\n            this.first = 10;\n            this.last = undefined;\n        }\n        if (type === 'previous') {\n            this.before = this.pageInfo?.startCursor;\n            this.after = undefined;\n            this.last = 10;\n            this.first = undefined;\n        }\n        this.search();\n    }\n\n    @action search = () => {\n        if (!this.accessToken) {\n            console.error('token is missing');\n            return;\n        }\n        this.loading = true;\n        const variables = toJS({\n            query: this.q,\n            first: this.first,\n            last: this.last,\n            type: this.type,\n            after: this.after,\n            before: this.before,\n        });\n\n        Axios({\n            url: endpoint,\n            headers: {\n                Authorization: `Bearer ${this.accessToken}`\n            },\n            method: 'POST',\n            data: ({\n                query: searchQuery,\n                variables,\n            })\n        })\n            .then(action(r => {\n                if (r.status === 200) {\n                    this.data = r.data;\n                }\n                this.loading = false;\n            }))\n            .catch(action(err => {\n                console.error(err);\n                this.loading = false;\n            }))\n    }\n\n}\n\nfunction setBrowserUrl(queryObj: { [key: string]: any }) {\n    let search = window.location.search;\n    const currentObj = parseQuery(search);\n    var url = `${window.location.pathname}?${stringify({ ...currentObj, ...queryObj })}`\n    window.history.pushState({ url }, '', url)\n}\n\nfunction parseQuery(search: string): { [key: string]: any } {\n    if (search.startsWith('?')) {\n        search = search.substring(1);\n    }\n    return parse(search);\n}","import * as React from 'react';\nimport { SearchResult } from './search-store';\nimport { Tag } from 'antd';\nimport { StarOutlined } from '@ant-design/icons';\n\ninterface Props {\n    item: SearchResult;\n}\n\nexport class RepositoryItem extends React.Component<Props> {\n    render() {\n        const { item } = this.props;\n\n        return (\n            <div key={item.id} style={{ padding: '24px 0', borderTop: '1px solid #e1e4e8' }}>\n                <a style={{ fontSize: '16px' }} href={item.url} target='__blank'>{item.nameWithOwner}</a>\n                <div style={{ marginBottom: '4px' }} dangerouslySetInnerHTML={{ __html: item.shortDescriptionHTML }} />\n                <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n                    {item.repositoryTopics?.nodes.map(node => {\n                        return (\n                            <Tag\n                                key={node.url}\n                                style={{ borderRadius: 6, marginBottom: 4, cursor: 'pointer' }}\n                                color='blue'\n                                onClick={() => {\n                                    window.open(node.url)\n                                }}\n                            >\n                                <div style={{ fontSize: 12, fontWeight: 500 }}>{node.topic.name}</div>\n                            </Tag>\n                        );\n                    })}\n                </div>\n                <div style={{ display: 'flex', flexWrap: 'wrap', alignItems: 'center', fontSize: 12, marginTop: 4 }}>\n                    <div style={{ display: 'flex', alignItems: 'center', marginRight: 16 }}>\n                        <StarOutlined />\n                        <div style={{ marginLeft: 4 }}>\n                            {item.stargazers?.totalCount}\n                        </div>\n                    </div>\n                    {\n                        item.primaryLanguage &&\n                        <div style={{ display: 'flex', alignItems: 'center', marginRight: 16 }}>\n                            <div style={{ width: 12, height: 12, borderRadius: 6, backgroundColor: item.primaryLanguage.color, marginRight: 4 }} />\n                            <div>\n                                {item.primaryLanguage.name}\n                            </div>\n                        </div>\n                    }\n                    {\n                        item.licenseInfo && !item.licenseInfo.hidden &&\n                        <div style={{ display: 'flex', alignItems: 'center', marginRight: 16 }}>\n                            <div style={{ marginLeft: 4 }}>\n                                {`${item.licenseInfo.spdxId} license`}\n                            </div>\n                        </div>\n                    }\n                    {\n                        item.updatedAt &&\n                        <div>\n                            {`Updated on ${new Date(item.updatedAt).toLocaleString()}`}\n                        </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport class IssueItem extends React.Component<Props> {\n    render() {\n        const { item } = this.props;\n        const body = item.body || ''\n        const content = body.length > 120 ? body.substring(0, 120) + ' ...' : body;\n\n        return (\n            <div key={item.id} style={{ padding: '24px 0', borderTop: '1px solid #e1e4e8' }}>\n                <a style={{ fontSize: '16px' }} href={item.url} target='__blank'>{item.title}</a>\n                <div style={{ marginBottom: '4px' }}>{content}</div>\n            </div>\n        );\n    }\n}","import { observable, action } from \"mobx\";\n\nexport class SearchHistoryStore {\n    storageKey = window.location.hostname + 'search_history';\n\n    @observable history: string[] = [];\n\n    constructor() {\n        this.getFromLocal();\n    }\n\n    @action add = (val: string) => {\n        if (!val) {\n            return;\n        }\n        const idx = this.history.findIndex(d => d === val);\n        if (idx > -1) {\n            this.history.splice(idx, 1);\n        }\n        this.history.unshift(val);\n        this.save();\n    }\n\n    @action delete = (val: string) => {\n        const idx = this.history.findIndex(d => d === val);\n        if (idx === -1) {\n            return;\n        }\n        this.history.splice(idx, 1);\n        this.save();\n    }\n\n    @action clean = () => {\n        console.log('clean');\n        this.history = [];\n        this.save();\n    }\n\n    save = () => {\n        localStorage.setItem(this.storageKey, JSON.stringify(this.history));\n    }\n\n    @action getFromLocal = () => {\n        const historyString = localStorage.getItem(this.storageKey) || '[]';\n        this.history = JSON.parse(historyString);\n    }\n}","import * as React from 'react';\nimport { Input } from 'antd';\nimport * as _ from 'lodash';\nimport { SearchStore } from './search-store';\nimport { observer } from 'mobx-react';\nimport { observable, action } from 'mobx';\nimport { SearchHistoryStore } from './seach-history';\n\ninterface Props {\n    style?: React.CSSProperties;\n    store: SearchStore;\n}\n\n@observer\nexport class SearchInput extends React.Component<Props> {\n\n    historyStore = new SearchHistoryStore();\n    input: Input | null = null;\n\n    @observable showHistory = false;\n\n    componentDidMount() {\n        window.document.addEventListener('click', this.documentClickHandler)\n    }\n\n    componentWillUnmount() {\n        window.document.removeEventListener('click', this.documentClickHandler)\n    }\n\n    render() {\n        const { style, store } = this.props;\n        return (\n            <div style={{ position: 'relative' }}>\n                <Input\n                    ref={r => this.input = r}\n                    placeholder='Search...'\n                    style={{ borderRadius: 6, ...style }}\n                    onChange={e => this.onChange(e.target.value)}\n                    defaultValue={store.q}\n                    onFocus={this.show}\n                    onClick={e => e.nativeEvent.stopImmediatePropagation()}\n                    onPressEnter={e => this.onChange(e.currentTarget.value)}\n                />\n                {\n                    this.showHistory && this.historyStore.history.length > 0 &&\n                    <div\n                        style={{ zIndex: 99, position: 'absolute', top: 36, left: 0, right: 0, maxHeight: 200, backgroundColor: '#fff', boxShadow: 'rgb(51, 51, 51, 0.1) 0px 10px 12px' }}\n                        onClick={e => e.nativeEvent.stopImmediatePropagation()}\n                    >\n                        {this.historyStore.history.map(v => {\n                            return (\n                                <div\n                                    key={v}\n                                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', padding: '4px 12px', fontSize: '16px', color: '#666', cursor: 'pointer' }}\n                                    onClick={() => {\n                                        this.close();\n                                        this.input?.setValue(v);\n                                        store.setQ(v);\n                                    }}\n                                >\n                                    {v}\n                                </div>\n                            )\n                        })}\n                        <div style={{ display: 'flex', flexDirection: 'row-reverse', padding: '4px 12px' }}>\n                            <div style={{ color: '#666', cursor: 'pointer' }} onClick={e => {\n                                this.historyStore.clean();\n                                this.close();\n                            }}>清除记录</div>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n\n    onChange = _.debounce((val: string) => {\n        const { store } = this.props;\n        this.close();\n        this.input?.blur();\n        store.setQ(val);\n        this.historyStore.add(val);\n    }, 800);\n\n    @action show = () => {\n        this.showHistory = true;\n    }\n\n    @action close = () => {\n        this.showHistory = false;\n    }\n\n    documentClickHandler = () => {\n        this.close();\n    }\n}","import * as React from 'react';\nimport { List, Radio, Button, Spin } from 'antd';\nimport { SearchStore, SearchResult } from './search-store';\nimport { observer } from 'mobx-react';\nimport { RepositoryItem, IssueItem } from './SearchResultItem';\nimport { SearchInput } from './SearchInput';\nimport { SearchOutlined } from '@ant-design/icons';\n\ninterface Props {\n    accessToken: string;\n}\n\n@observer\nexport class SearchList extends React.Component<Props> {\n\n    store = new SearchStore({ accessToken: this.props.accessToken, search: document.location.search });\n\n    render() {\n        return (\n            <Spin spinning={this.store.loading}>\n                <div style={{ maxWidth: '768px', margin: 'auto', padding: '0 20px' }}>\n                    <div style={{ marginBottom: 24 }}>\n                        <h2 style={{ color: '#24292E' }}><SearchOutlined style={{ marginRight: 6 }} />Search Github</h2>\n                        <SearchInput\n                            style={{ width: '100%' }}\n                            store={this.store}\n                        />\n                    </div>\n                    {this.renderTypeRadio()}\n                    {this.renderCountTip()}\n                    {this.renderList()}\n                </div>\n            </Spin>\n        );\n    }\n\n    renderList = () => {\n        const dataSource = (this.store.data?.data.search.nodes || []).filter(item => item.id);\n        if (!this.store.data) {\n            return null;\n        }\n        return (\n            <List<SearchResult>\n                style={{ height: '100%' }}\n                itemLayout=\"vertical\"\n                size=\"large\"\n                dataSource={dataSource}\n                renderItem={this.renderItem}\n                footer={<div style={{ display: 'flex', flexDirection: 'row-reverse', alignItems: 'center' }}>\n                    {[\n                        { text: 'Next', action: 'next', disabled: this.store.pageInfo?.hasNextPage },\n                        { text: 'Previous', action: 'previous', disabled: this.store.pageInfo?.hasPreviousPage },\n                    ].filter(item => item.disabled).map(item => (\n                        <Button\n                            key={item.action}\n                            style={{ padding: '0 10px', fontSize: '16px' }}\n                            type='link'\n                            onClick={() => {\n                                this.store.setPageInfo(item.action);\n                                window.scrollTo(0, 0);\n                            }}\n                        >\n                            {item.text}\n                        </Button>\n                    ))}\n                </div>}\n            />\n        );\n    }\n\n    renderItem = (item: SearchResult) => {\n        if (this.store.type === 'REPOSITORY') {\n            return <RepositoryItem item={item} />;\n        }\n\n        if (this.store.type === 'ISSUE') {\n            return <IssueItem item={item} />;\n        }\n\n        return null;\n    }\n\n    renderCountTip = () => {\n        const tip = (() => {\n            switch (this.store.type) {\n                case 'REPOSITORY':\n                    return `Showing ${this.store.data?.data.search.repositoryCount.toLocaleString()} available repository results`;\n                case 'ISSUE':\n                    return `${this.store.data?.data.search.issueCount.toLocaleString()} issues`;\n                default:\n                    return '';\n            }\n        })()\n\n        return (\n            this.store.data && tip &&\n            <div style={{ fontSize: 24, color: '#24292E', fontWeight: 'bold', marginBottom: 16 }}>{tip}</div>\n        );\n    }\n\n    renderTypeRadio = () => {\n        return (\n            <div style={{ marginBottom: 24 }}>\n                <Radio.Group\n                    size='small'\n                    buttonStyle='solid'\n                    defaultValue={this.store.type}\n                    onChange={e => {\n                        this.store.setType(e.target.value);\n                    }}\n                >\n                    <Radio.Button value=\"REPOSITORY\">Repositories</Radio.Button>\n                    <Radio.Button value=\"ISSUE\">Issues</Radio.Button>\n                </Radio.Group>\n            </div>\n        );\n    }\n}","import * as React from 'react';\nimport { Input, Button } from 'antd';\nimport { GithubConfig } from './config';\n\ninterface Props {\n    config: GithubConfig;\n}\nexport class TokenInput extends React.Component<Props> {\n\n    value = '';\n\n    render() {\n        const { config } = this.props;\n        return (\n            <div style={{ maxWidth: '768px', margin: 'auto', padding: '0 20px' }}>\n                <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                    <Input\n                        placeholder='input github personal access token'\n                        onChange={e => this.value = e.target.value}\n                    />\n                    <Button type='primary' onClick={() => config.setGithubAccessToken(this.value)}>Confirm</Button>\n                </div>\n\n            </div>\n        );\n    }\n}","import { observable } from \"mobx\";\n\nexport class GithubConfig {\n    storageKey = window.location.hostname + 'github_api_access_token';\n    \n    @observable token: string | null = '';\n\n    constructor() {\n        this.token = this.getGithubAccessToken()\n    }\n\n    setGithubAccessToken(value: string) {\n        console.log('set token:', value)\n        this.token = value;\n        localStorage.setItem(this.storageKey, value);\n    }\n\n    getGithubAccessToken() {\n        return localStorage.getItem(this.storageKey);\n    }\n\n    deleteToken() {\n        this.token = null;\n        localStorage.removeItem(this.storageKey);\n    }\n}\n","import * as React from 'react';\nimport { observer } from 'mobx-react';\nimport { Layout } from 'antd';\nimport { SearchList } from '../parts/SearchList';\nimport { TokenInput } from '../parts/TokenInput';\nimport { GithubConfig } from '../parts/config';\n\nconst { Header, Content } = Layout;\n\n@observer\nexport class Search extends React.Component {\n    config = new GithubConfig();\n\n    render() {\n        return <Layout style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>\n            <Header style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', height: '53px', backgroundColor: '#24292e', color: '#fff', padding: '0 20px' }}>\n                <div style={{ flexShrink: 0, fontSize: '16px', fontWeight: 'bold', marginRight: '16px' }}>Github Explorer</div>\n                <div style={{ cursor: 'pointer' }} onClick={() => this.config.deleteToken()}>清除token</div>\n            </Header>\n            <Content style={{ flex: 1, justifyContent: 'center', backgroundColor: '#fff', padding: '24px 0 50px' }}>\n                {this.renderContent()}\n            </Content>\n        </Layout>\n    }\n\n    renderContent = () => {\n        if (!this.config.token) {\n            return <TokenInput config={this.config} />;\n        }\n\n        return <SearchList accessToken={this.config.token} />;\n    }\n}\n","import * as React from 'react';\nimport { Search } from './pages/Search';\n\nclass App extends React.Component {\n    render() {\n        return <Search />;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'antd/dist/antd.css';\nimport './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}